#pragma once
#include <string>

#include "engine/UtilityFunction.h"
#include "engine/UtilityInterval.h"

namespace alica
{

class Plan;
class RunningPlan;

using std::make_shared;
using std::shared_ptr; // TODO: remove once autogenerated files have been reworked
/**
 * A default implementation for a plan's utility function. The only occuring summand referrs to the task-role
 * preferences.
 */
class DefaultUtilityFunction : virtual public UtilityFunction
{
  public:
    DefaultUtilityFunction(Plan* plan);
    virtual ~DefaultUtilityFunction();
    double eval(RunningPlan* newRp, RunningPlan* oldRp);
    UtilityInterval eval(IAssignment* newAss, IAssignment* oldAss);
    std::string toString() const;
};

} /* namespace alica */
