// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ID.capnp

#include "ID.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<31> b_db5d1b772dc860ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,  96, 200,  45, 119,  27,  93, 219,
      9,   0,   0,   0,   1,   0,   0,   0,
    190, 251, 215, 215, 148, 230, 200, 241,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,  68,  46,  99,  97, 112, 110, 112,
     58,  73,  68,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db5d1b772dc860ab = b_db5d1b772dc860ab.words;
#if !CAPNP_LITE
static const uint16_t m_db5d1b772dc860ab[] = {0};
static const uint16_t i_db5d1b772dc860ab[] = {0};
const ::capnp::_::RawSchema s_db5d1b772dc860ab = {
  0xdb5d1b772dc860ab, b_db5d1b772dc860ab.words, 31, nullptr, m_db5d1b772dc860ab,
  0, 1, i_db5d1b772dc860ab, nullptr, nullptr, { &s_db5d1b772dc860ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace essentials {

// ID
constexpr uint16_t ID::_capnpPrivate::dataWordSize;
constexpr uint16_t ID::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ID::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ID::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

