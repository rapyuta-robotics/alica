<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="use_gdb" default="$(optenv GDB false)"/>
    <arg name="launch_prefix" value="xterm -sl 100000 -fa 'Monospace' -fs 12 -e gdb --args" if="$(arg use_gdb)"/>
    <arg name="launch_prefix" value="" unless="$(arg use_gdb)"/>
    <arg name="master_plan"    default="SurroundLeaderTutorial" />
    <arg name="placeholder_mapping"        default="" />
    <arg name="roleset"        default="Roleset" />
    <arg name="turtlesim_lib_path"     default="$(find alica_turtlesim)/etc/" />
    <arg name="turtlesim_ros_path"     default="$(find alica_ros_turtlesim)/etc/" />

    <arg name="turtles"        default="1"/>

    <arg name="agent_name"     value="$(eval 'turtle'+str(turtles))"/>
    <node name="$(arg agent_name)" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim" output="screen" launch-prefix="$(arg launch_prefix)">
        <param name="name"         value="$(arg agent_name)" />
        <param name="agent_id"     value="$(arg turtles)" />
        <param name="master_plan"  value="$(arg master_plan)" />
        <param name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <param name="roleset"      value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </node>

    <include file="$(dirname)/turtle.launch"   if="$(eval turtles > 1)">
        <arg name="turtles"         value="$(eval turtles - 1)" />
        <arg name="use_gdb"         value="$(arg use_gdb)"/>
        <arg name="master_plan"     value="$(arg master_plan)" />
        <arg name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <arg name="roleset"         value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </include>

</launch>
