<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="use_gdb" default="$(optenv GDB false)"/>
    <arg name="launch_prefix" value="xterm -sl 100000 -fa 'Monospace' -fs 12 -e gdb --args" if="$(arg use_gdb)"/>
    <arg name="launch_prefix" value="" unless="$(arg use_gdb)"/>
    <arg name="master_plan"    default="SurroundLeaderTutorial" />
    <arg name="placeholder_mapping"        default="$(find alica_ros_turtlesim)/config/placeholder_mapping.json" />
    <arg name="roleset"        default="Roleset" />
    <arg name="turtlesim_lib_path"     default="$(find alica_turtlesim)/etc/" />
    <arg name="turtlesim_ros_path"     default="$(find alica_ros_turtlesim)/etc/" />

    <node pkg="turtlesim" type="turtlesim_node" name="turtlesim" />

    <node name="turtle1" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim" output="screen" launch-prefix="$(arg launch_prefix)">
        <param name="name"         value="turtle1" />
        <param name="agent_id"     value="1" />
        <param name="master_plan"  value="$(arg master_plan)" />
        <param name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <param name="roleset"      value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </node>

     <node name="turtle2" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim" output="screen" launch-prefix="$(arg launch_prefix)">
        <param name="name"         value="turtle2" />
        <param name="agent_id"     value="2" />
        <param name="master_plan"  value="$(arg master_plan)" />
        <param name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <param name="roleset"      value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </node>

    <node name="turtle3" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim" output="screen" launch-prefix="$(arg launch_prefix)">
        <param name="name"         value="turtle3" />
        <param name="agent_id"     value="3" />
        <param name="master_plan"  value="$(arg master_plan)" />
        <param name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <param name="roleset"      value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </node>

    <node name="turtle4" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim" output="screen" launch-prefix="$(arg launch_prefix)">
        <param name="name"         value="turtle4" />
        <param name="agent_id"     value="4" />
        <param name="master_plan"  value="$(arg master_plan)" />
        <param name="placeholder_mapping" value = "$(arg placeholder_mapping)" />
        <param name="roleset"      value="$(arg roleset)" />
        <param name="turtlesim_lib_path"   value="$(arg turtlesim_lib_path)" />
        <param name="turtlesim_ros_path"   value="$(arg turtlesim_ros_path)" />
    </node>

    <test name="all_tests" test-name="all_tests" pkg="alica_ros_turtlesim" type="alica_ros_turtlesim-test" time-limit="100" launch-prefix="$(arg launch_prefix)"/>

</launch>
