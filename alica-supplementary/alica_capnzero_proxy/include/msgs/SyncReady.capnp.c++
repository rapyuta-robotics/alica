// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: SyncReady.capnp

#include "SyncReady.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_c536739ae853c91e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30, 201,  83, 232, 154, 115,  54, 197,
     16,   0,   0,   0,   1,   0,   1,   0,
    154,  33, 189, 165, 239,  20,  37, 204,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 121, 110,  99,  82, 101,  97, 100,
    121,  46,  99,  97, 112, 110, 112,  58,
     83, 121, 110,  82, 101,  97, 100, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 110, 100, 101, 114,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 121, 110,  99,  84, 114,  97, 110,
    115, 105, 116, 105, 111, 110,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c536739ae853c91e = b_c536739ae853c91e.words;
#if !CAPNP_LITE
static const uint16_t m_c536739ae853c91e[] = {0, 1};
static const uint16_t i_c536739ae853c91e[] = {0, 1};
const ::capnp::_::RawSchema s_c536739ae853c91e = {
  0xc536739ae853c91e, b_c536739ae853c91e.words, 55, nullptr, m_c536739ae853c91e,
  0, 2, i_c536739ae853c91e, nullptr, nullptr, { &s_c536739ae853c91e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SynReady
constexpr uint16_t SynReady::_capnpPrivate::dataWordSize;
constexpr uint16_t SynReady::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SynReady::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SynReady::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



